# Multi-stage build for Caddy with Gitea Pages module
FROM golang:1.24-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git

# Install xcaddy
RUN go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest

# Set working directory
WORKDIR /src

# Copy module source
COPY . .

# Build Caddy with the module
RUN xcaddy build --with github.com/rsp2k/caddy-gitea-pages=.

# Production stage
FROM alpine:3.21

# Install ca-certificates for HTTPS
RUN apk --no-cache add ca-certificates tzdata

# Create caddy user
RUN addgroup -g 1000 caddy && \
    adduser -D -s /bin/sh -u 1000 -G caddy caddy

# Copy Caddy binary from builder
COPY --from=builder /src/caddy /usr/bin/caddy

# Create necessary directories
RUN mkdir -p /etc/caddy /var/cache/gitea-pages && \
    chown -R caddy:caddy /etc/caddy /var/cache/gitea-pages

# Set up volumes
VOLUME ["/data", "/config", "/var/cache/gitea-pages"]

# Expose ports
EXPOSE 80 443

# Switch to caddy user
USER caddy

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD caddy version || exit 1

# Default command
CMD ["caddy", "run", "--config", "/etc/caddy/Caddyfile", "--adapter", "caddyfile"]